name: CI - Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      AUTH_URL: ${{ secrets.AUTH_URL }}
      NEXTAUTH_URL: ${{ secrets.AUTH_URL }}
      EMAIL_SERVER: ${{ secrets.EMAIL_SERVER }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      NEXT_TELEMETRY_DISABLED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Detect package manager
        id: pm
        run: |
          if [ -f pnpm-lock.yaml ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
          elif [ -f yarn.lock ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
          else
            echo "manager=npm" >> $GITHUB_OUTPUT
          fi

      - name: Install PNPM (if selected)
        if: steps.pm.outputs.manager == 'pnpm'
        run: npm i -g pnpm@8

      - name: Install dependencies
        run: |
          if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then pnpm install --frozen-lockfile; fi
          if [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then corepack enable && yarn install --frozen-lockfile; fi
          if [ "${{ steps.pm.outputs.manager }}" = "npm" ]; then npm ci || npm install; fi

      - name: Build
        run: |
          if [ -f package.json ]; then
            if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
              if [ "${{ steps.pm.outputs.manager }}" = "pnpm" ]; then pnpm build; fi
              if [ "${{ steps.pm.outputs.manager }}" = "yarn" ]; then yarn build; fi
              if [ "${{ steps.pm.outputs.manager }}" = "npm" ]; then npm run build; fi
            else
              echo "No build script found in package.json" && exit 1
            fi
          else
            echo "package.json not found" && exit 1
          fi
